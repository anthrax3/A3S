/**
 * *************************************************
 * Copyright (c) 2019, Grindrod Bank Limited
 * License MIT: https://opensource.org/licenses/MIT
 * **************************************************
 */
/*
 * A3S
 *
 * API Definition for the A3S. This service allows authentication, authorisation and accounting.
 *
 * The version of the OpenAPI document: 1.0.5
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using za.co.grindrodbank.a3s.Attributes;
using Microsoft.AspNetCore.Authorization;
using za.co.grindrodbank.a3s.A3SApiResources;

namespace za.co.grindrodbank.a3s.AbstractApiControllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class LdapAuthenticationModeApiController : ControllerBase
    { 
        /// <summary>
        /// Create a LDAP Authentication Mode.
        /// </summary>
        /// <remarks>Create a new LDAP Authentication Mode.</remarks>
        /// <param name="ldapAuthenticationModeSubmit"></param>
        /// <response code="200">Successful. LDAP Authentication Mode created.</response>
        /// <response code="400">Invalid parameters.</response>
        /// <response code="401">Not authenticated.</response>
        /// <response code="403">Forbidden - Not authorized to create a LDAP Authentication Mode.</response>
        /// <response code="404">LDAP Authentication mode not found.</response>
        /// <response code="422">Non-Processible request. The request was correctly structured but some business rules were violated, preventing the creation of the LDAP Authentication Mode.</response>
        /// <response code="500">An unexpected error occurred.</response>
        [HttpPost]
        [Route("/authenticationModes/ldap")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(LdapAuthenticationMode))]
        [ProducesResponseType(statusCode: 400, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 403, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 422, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(ErrorResponse))]
        public abstract Task<IActionResult> CreateLdapAuthenticationModeAsync([FromBody]LdapAuthenticationModeSubmit ldapAuthenticationModeSubmit);

        /// <summary>
        /// Deletes a LDAP Authentication Mode.
        /// </summary>
        /// <remarks>Deletes a LDAP Authentication Mode, but only if there are no users currently using this Authentication Mode.</remarks>
        /// <param name="ldapAuthenticationModeId">The UUID of the LDAP Authentication Mode.</param>
        /// <response code="204">No Content.</response>
        /// <response code="400">Bad Request.</response>
        /// <response code="401">Not authenticated.</response>
        /// <response code="403">Forbidden - You are not authorized to delete LDAP Authentication Modes.</response>
        /// <response code="404">LDAP Authentication Mode not found.</response>
        /// <response code="422">Non-Processible request. Most likely returned as a result of there still being users assigned to the LDAP Auth Mode that a deletion attempt was made for.</response>
        /// <response code="500">An unexpected error occurred.</response>
        [HttpDelete]
        [Route("/authenticationModes/ldap/{ldapAuthenticationModeId}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 400, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 403, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 422, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(ErrorResponse))]
        public abstract Task<IActionResult> DeleteLdapAuthenticationModeAsync([FromRoute][Required]Guid ldapAuthenticationModeId);

        /// <summary>
        /// Get a ldapAuthenticationMode
        /// </summary>
        /// <remarks>Get a ldapAuthenticationMode by its UUID</remarks>
        /// <param name="ldapAuthenticationModeId">The UUID of the LDAP Authentication Mode.</param>
        /// <response code="200">OK</response>
        /// <response code="400">Bad Request.</response>
        /// <response code="401">Not authenticated.</response>
        /// <response code="403">Forbidden - You are not authorized to read LDAP Authentication Modes.</response>
        /// <response code="404">LDAP Auth Mode not found.</response>
        /// <response code="500">An unexpected error occurred.</response>
        [HttpGet]
        [Route("/authenticationModes/ldap/{ldapAuthenticationModeId}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(LdapAuthenticationMode))]
        [ProducesResponseType(statusCode: 400, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 403, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(ErrorResponse))]
        public abstract Task<IActionResult> GetLdapAuthenticationModeAsync([FromRoute][Required]Guid ldapAuthenticationModeId);

        /// <summary>
        /// Search for LDAP Authentication Modes.
        /// </summary>
        /// <remarks>Search for LDAP Authentication Modes.</remarks>
        /// <param name="orderBy">a comma separated list of fields in their sort order. Ascending order is assumed. Append desc after a field to indicate descending order.</param>
        /// <response code="200">OK</response>
        /// <response code="204">No Content.</response>
        /// <response code="400">Bad Request.</response>
        /// <response code="401">Not authenticated.</response>
        /// <response code="403">Forbidden - You are not authorized to access the list of LDAP Authentication modes.</response>
        /// <response code="404">LDAP Authentication mode list not found.</response>
        /// <response code="500">An unexpected error occurred.</response>
        [HttpGet]
        [Route("/authenticationModes/ldap")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(List<LdapAuthenticationMode>))]
        [ProducesResponseType(statusCode: 400, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 403, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(ErrorResponse))]
        public abstract Task<IActionResult> ListLdapAuthenticationModesAsync([FromQuery]List<string> orderBy);

        /// <summary>
        /// Test a LDAP Authentication Mode.
        /// </summary>
        /// <remarks>Test a LDAP Authentication Mode.</remarks>
        /// <param name="ldapAuthenticationModeSubmit"></param>
        /// <response code="200">Successful. LDAP Authentication Model successfully tested. Check Success parameter and results for more information.</response>
        /// <response code="400">Invalid parameters.</response>
        /// <response code="401">Not authenticated.</response>
        /// <response code="403">Forbidden - Not authorized to test a LDAP Authentication Mode.</response>
        /// <response code="404">LDAP Authentication Mode not found.</response>
        /// <response code="500">An unexpected error occurred.</response>
        [HttpPost]
        [Route("/authenticationModes/ldap/test")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(ValidationResultResponse))]
        [ProducesResponseType(statusCode: 400, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 403, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(ErrorResponse))]
        public abstract Task<IActionResult> TestLdapAuthenticationModeAsync([FromBody]LdapAuthenticationModeSubmit ldapAuthenticationModeSubmit);

        /// <summary>
        /// Update a LDAP Authentication Mode.
        /// </summary>
        /// <remarks>Update a LDAP Authentication Mode by its UUID.</remarks>
        /// <param name="ldapAuthenticationModeId">The UUID of the LDAP Authentication Mode.</param>
        /// <param name="ldapAuthenticationModeSubmit"></param>
        /// <response code="200">OK.</response>
        /// <response code="400">Bad Request.</response>
        /// <response code="401">Not authenticated.</response>
        /// <response code="403">Forbidden - You are not authorized to update LDAP Authentication Modes.</response>
        /// <response code="404">LDAP Authentication Mode not found.</response>
        /// <response code="422">Non-Processible request. The request was correctly structured but some business rules were violated, preventing the update of the LDAP Authentication Mode.</response>
        /// <response code="500">An unexpected error occurred.</response>
        [HttpPut]
        [Route("/authenticationModes/ldap/{ldapAuthenticationModeId}")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(LdapAuthenticationMode))]
        [ProducesResponseType(statusCode: 400, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 401, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 403, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 404, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 422, type: typeof(ErrorResponse))]
        [ProducesResponseType(statusCode: 500, type: typeof(ErrorResponse))]
        public abstract Task<IActionResult> UpdateLdapAuthenticationModeAsync([FromRoute][Required]Guid ldapAuthenticationModeId, [FromBody]LdapAuthenticationModeSubmit ldapAuthenticationModeSubmit);
    }
}
